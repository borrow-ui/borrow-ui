import React from 'react';

import { UI_PREFIX } from '../../../config';
import { cx } from '../../../utils/classNames';
import { LAYOUTS, ALIGNMENTS, VALIGNMENTS } from '../constants';
import { LabelProps } from './Label.types';

const LABEL_CLASS = `${UI_PREFIX}__form__label`;
// alignment class is autogenerated:
// const alignmentClass = `${UI_PREFIX}__form__label--alignment-${alignment}`;
// vertical alignment class is autogenerated:
// const vAlignmentClass = `${UI_PREFIX}__form__label--valignment-${vAlignment}`;
const LABEL_VERTICAL_CLASS = `${UI_PREFIX}__form__label--${LAYOUTS.VERTICAL}`;
const LABEL_HORIZONTAL_CLASS = `${UI_PREFIX}__form__label--${LAYOUTS.HORIZONTAL}`;
const LABEL_REQUIRED_CLASS = `${UI_PREFIX}__form__label--required`;

export const Label = ({
    label,
    className = '',
    layout = LAYOUTS.DEFAULT,
    width,
    tag: Tag = 'label',
    htmlFor,
    alignment = ALIGNMENTS.DEFAULT,
    vAlignment = VALIGNMENTS.DEFAULT,
    style,
    required,
    ...rest
}: LabelProps): JSX.Element => {
    const layoutClass = layout === LAYOUTS.VERTICAL ? LABEL_VERTICAL_CLASS : LABEL_HORIZONTAL_CLASS;
    const labelWidthStyle = {} as React.CSSProperties;
    if (width) {
        labelWidthStyle.width = width;
        // Required for long texts in the controller part of field due to flex property
        labelWidthStyle.minWidth = width;
    }
    const alignmentClass = `${UI_PREFIX}__form__label--alignment-${alignment}`;
    const vAlignmentClass = `${UI_PREFIX}__form__label--valignment-${vAlignment}`;

    const labelClassName = cx(LABEL_CLASS, layoutClass, alignmentClass, vAlignmentClass, className);
    const labelStyle = { ...labelWidthStyle, ...style };
    return (
        <Tag className={labelClassName} style={labelStyle} htmlFor={htmlFor} {...rest}>
            {label} {required && <span className={LABEL_REQUIRED_CLASS}>*</span>}
        </Tag>
    );
};
